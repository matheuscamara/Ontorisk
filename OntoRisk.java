package OntoRisk OWL;

import OntoRisk OWL.impl.*;

import java.util.Collection;

import org.protege.owl.codegeneration.CodeGenerationFactory;
import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.FactoryHelper;
import org.protege.owl.codegeneration.impl.ProtegeJavaMapping;
import org.protege.owl.codegeneration.inference.CodeGenerationInference;
import org.protege.owl.codegeneration.inference.SimpleInference;

import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;

/**
 * A class that serves as the entry point to the generated code providing access
 * to existing individuals in the ontology and the ability to create new individuals in the ontology.<p>
 * 
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: MyFactory<br>
 * @version generated on Wed Nov 22 17:43:22 GMT-03:00 2017 by Daniel
 */
public class MyFactory implements CodeGenerationFactory {
    private OWLOntology ontology;
    private ProtegeJavaMapping javaMapping = new ProtegeJavaMapping();
    private FactoryHelper delegate;
    private CodeGenerationInference inference;

    public MyFactory(OWLOntology ontology) {
	    this(ontology, new SimpleInference(ontology));
    }
    
    public MyFactory(OWLOntology ontology, CodeGenerationInference inference) {
        this.ontology = ontology;
        this.inference = inference;
        javaMapping.initialize(ontology, inference);
        delegate = new FactoryHelper(ontology, inference);
    }

    public OWLOntology getOwlOntology() {
        return ontology;
    }
    
    public void saveOwlOntology() throws OWLOntologyStorageException {
        ontology.getOWLOntologyManager().saveOntology(ontology);
    }
    
    public void flushOwlReasoner() {
        delegate.flushOwlReasoner();
    }
    
    public boolean canAs(WrappedIndividual resource, Class<? extends WrappedIndividual> javaInterface) {
    	return javaMapping.canAs(resource, javaInterface);
    }
    
    public  <X extends WrappedIndividual> X as(WrappedIndividual resource, Class<? extends X> javaInterface) {
    	return javaMapping.as(resource, javaInterface);
    }
    
    public Class<?> getJavaInterfaceFromOwlClass(OWLClass cls) {
        return javaMapping.getJavaInterfaceFromOwlClass(cls);
    }
    
    public OWLClass getOwlClassFromJavaInterface(Class<?> javaInterface) {
	    return javaMapping.getOwlClassFromJavaInterface(javaInterface);
    }
    
    public CodeGenerationInference getInference() {
        return inference;
    }

    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Acordos_contratuais_relacionados_a_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Acordos_contratuais_relacionados_a_riscos", Acordos_contratuais_relacionados_a_riscos.class, DefaultAcordos_contratuais_relacionados_a_riscos.class);
    }

    /**
     * Creates an instance of type Acordos_contratuais_relacionados_a_riscos.  Modifies the underlying ontology.
     */
    public Acordos_contratuais_relacionados_a_riscos createAcordos_contratuais_relacionados_a_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ACORDOS_CONTRATUAIS_RELACIONADOS_A_RISCOS, DefaultAcordos_contratuais_relacionados_a_riscos.class);
    }

    /**
     * Gets an instance of type Acordos_contratuais_relacionados_a_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Acordos_contratuais_relacionados_a_riscos getAcordos_contratuais_relacionados_a_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ACORDOS_CONTRATUAIS_RELACIONADOS_A_RISCOS, DefaultAcordos_contratuais_relacionados_a_riscos.class);
    }

    /**
     * Gets all instances of Acordos_contratuais_relacionados_a_riscos from the ontology.
     */
    public Collection<? extends Acordos_contratuais_relacionados_a_riscos> getAllAcordos_contratuais_relacionados_a_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ACORDOS_CONTRATUAIS_RELACIONADOS_A_RISCOS, DefaultAcordos_contratuais_relacionados_a_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_da_lista_de_verificação
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_da_lista_de_verificação", Analise_da_lista_de_verificação.class, DefaultAnalise_da_lista_de_verificação.class);
    }

    /**
     * Creates an instance of type Analise_da_lista_de_verificação.  Modifies the underlying ontology.
     */
    public Analise_da_lista_de_verificação createAnalise_da_lista_de_verificação(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DA_LISTA_DE_VERIFICAÇÃO, DefaultAnalise_da_lista_de_verificação.class);
    }

    /**
     * Gets an instance of type Analise_da_lista_de_verificação with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_da_lista_de_verificação getAnalise_da_lista_de_verificação(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DA_LISTA_DE_VERIFICAÇÃO, DefaultAnalise_da_lista_de_verificação.class);
    }

    /**
     * Gets all instances of Analise_da_lista_de_verificação from the ontology.
     */
    public Collection<? extends Analise_da_lista_de_verificação> getAllAnalise_da_lista_de_verificaçãoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_DA_LISTA_DE_VERIFICAÇÃO, DefaultAnalise_da_lista_de_verificação.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_premissas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_premissas", Analise_das_premissas.class, DefaultAnalise_das_premissas.class);
    }

    /**
     * Creates an instance of type Analise_das_premissas.  Modifies the underlying ontology.
     */
    public Analise_das_premissas createAnalise_das_premissas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_PREMISSAS, DefaultAnalise_das_premissas.class);
    }

    /**
     * Gets an instance of type Analise_das_premissas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_das_premissas getAnalise_das_premissas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_PREMISSAS, DefaultAnalise_das_premissas.class);
    }

    /**
     * Gets all instances of Analise_das_premissas from the ontology.
     */
    public Collection<? extends Analise_das_premissas> getAllAnalise_das_premissasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_DAS_PREMISSAS, DefaultAnalise_das_premissas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_reservas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_reservas", Analise_das_reservas.class, DefaultAnalise_das_reservas.class);
    }

    /**
     * Creates an instance of type Analise_das_reservas.  Modifies the underlying ontology.
     */
    public Analise_das_reservas createAnalise_das_reservas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_RESERVAS, DefaultAnalise_das_reservas.class);
    }

    /**
     * Gets an instance of type Analise_das_reservas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_das_reservas getAnalise_das_reservas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_RESERVAS, DefaultAnalise_das_reservas.class);
    }

    /**
     * Gets all instances of Analise_das_reservas from the ontology.
     */
    public Collection<? extends Analise_das_reservas> getAllAnalise_das_reservasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_DAS_RESERVAS, DefaultAnalise_das_reservas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_tendências_e_da_variação
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_das_tendências_e_da_variação", Analise_das_tendências_e_da_variação.class, DefaultAnalise_das_tendências_e_da_variação.class);
    }

    /**
     * Creates an instance of type Analise_das_tendências_e_da_variação.  Modifies the underlying ontology.
     */
    public Analise_das_tendências_e_da_variação createAnalise_das_tendências_e_da_variação(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_TENDÊNCIAS_E_DA_VARIAÇÃO, DefaultAnalise_das_tendências_e_da_variação.class);
    }

    /**
     * Gets an instance of type Analise_das_tendências_e_da_variação with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_das_tendências_e_da_variação getAnalise_das_tendências_e_da_variação(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_DAS_TENDÊNCIAS_E_DA_VARIAÇÃO, DefaultAnalise_das_tendências_e_da_variação.class);
    }

    /**
     * Gets all instances of Analise_das_tendências_e_da_variação from the ontology.
     */
    public Collection<? extends Analise_das_tendências_e_da_variação> getAllAnalise_das_tendências_e_da_variaçãoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_DAS_TENDÊNCIAS_E_DA_VARIAÇÃO, DefaultAnalise_das_tendências_e_da_variação.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_e_reuniões_de_planejamento
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_e_reuniões_de_planejamento", Analise_e_reuniões_de_planejamento.class, DefaultAnalise_e_reuniões_de_planejamento.class);
    }

    /**
     * Creates an instance of type Analise_e_reuniões_de_planejamento.  Modifies the underlying ontology.
     */
    public Analise_e_reuniões_de_planejamento createAnalise_e_reuniões_de_planejamento(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_E_REUNIÕES_DE_PLANEJAMENTO, DefaultAnalise_e_reuniões_de_planejamento.class);
    }

    /**
     * Gets an instance of type Analise_e_reuniões_de_planejamento with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_e_reuniões_de_planejamento getAnalise_e_reuniões_de_planejamento(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_E_REUNIÕES_DE_PLANEJAMENTO, DefaultAnalise_e_reuniões_de_planejamento.class);
    }

    /**
     * Gets all instances of Analise_e_reuniões_de_planejamento from the ontology.
     */
    public Collection<? extends Analise_e_reuniões_de_planejamento> getAllAnalise_e_reuniões_de_planejamentoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_E_REUNIÕES_DE_PLANEJAMENTO, DefaultAnalise_e_reuniões_de_planejamento.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_qualitativa_de_risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_qualitativa_de_risco", Analise_qualitativa_de_risco.class, DefaultAnalise_qualitativa_de_risco.class);
    }

    /**
     * Creates an instance of type Analise_qualitativa_de_risco.  Modifies the underlying ontology.
     */
    public Analise_qualitativa_de_risco createAnalise_qualitativa_de_risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUALITATIVA_DE_RISCO, DefaultAnalise_qualitativa_de_risco.class);
    }

    /**
     * Gets an instance of type Analise_qualitativa_de_risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_qualitativa_de_risco getAnalise_qualitativa_de_risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUALITATIVA_DE_RISCO, DefaultAnalise_qualitativa_de_risco.class);
    }

    /**
     * Gets all instances of Analise_qualitativa_de_risco from the ontology.
     */
    public Collection<? extends Analise_qualitativa_de_risco> getAllAnalise_qualitativa_de_riscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_QUALITATIVA_DE_RISCO, DefaultAnalise_qualitativa_de_risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem", Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem.class, DefaultAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem.class);
    }

    /**
     * Creates an instance of type Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem.  Modifies the underlying ontology.
     */
    public Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem createAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUANTITATIVA_DE_RISCOS_E_TECNICAS_DE_MODELAGEM, DefaultAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem.class);
    }

    /**
     * Gets an instance of type Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem getAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUANTITATIVA_DE_RISCOS_E_TECNICAS_DE_MODELAGEM, DefaultAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem.class);
    }

    /**
     * Gets all instances of Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem from the ontology.
     */
    public Collection<? extends Analise_quantitativa_de_riscos_e_tecnicas_de_modelagem> getAllAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagemInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_QUANTITATIVA_DE_RISCOS_E_TECNICAS_DE_MODELAGEM, DefaultAnalise_quantitativa_de_riscos_e_tecnicas_de_modelagem.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_quantitavia_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Analise_quantitavia_de_riscos", Analise_quantitavia_de_riscos.class, DefaultAnalise_quantitavia_de_riscos.class);
    }

    /**
     * Creates an instance of type Analise_quantitavia_de_riscos.  Modifies the underlying ontology.
     */
    public Analise_quantitavia_de_riscos createAnalise_quantitavia_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUANTITAVIA_DE_RISCOS, DefaultAnalise_quantitavia_de_riscos.class);
    }

    /**
     * Gets an instance of type Analise_quantitavia_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Analise_quantitavia_de_riscos getAnalise_quantitavia_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ANALISE_QUANTITAVIA_DE_RISCOS, DefaultAnalise_quantitavia_de_riscos.class);
    }

    /**
     * Gets all instances of Analise_quantitavia_de_riscos from the ontology.
     */
    public Collection<? extends Analise_quantitavia_de_riscos> getAllAnalise_quantitavia_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ANALISE_QUANTITAVIA_DE_RISCOS, DefaultAnalise_quantitavia_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_Processos_organizacionais
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_Processos_organizacionais", Ativos_de_Processos_organizacionais.class, DefaultAtivos_de_Processos_organizacionais.class);
    }

    /**
     * Creates an instance of type Ativos_de_Processos_organizacionais.  Modifies the underlying ontology.
     */
    public Ativos_de_Processos_organizacionais createAtivos_de_Processos_organizacionais(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_Processos_organizacionais.class);
    }

    /**
     * Gets an instance of type Ativos_de_Processos_organizacionais with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ativos_de_Processos_organizacionais getAtivos_de_Processos_organizacionais(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_Processos_organizacionais.class);
    }

    /**
     * Gets all instances of Ativos_de_Processos_organizacionais from the ontology.
     */
    public Collection<? extends Ativos_de_Processos_organizacionais> getAllAtivos_de_Processos_organizacionaisInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_Processos_organizacionais.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais", Ativos_de_processos_organizacionais.class, DefaultAtivos_de_processos_organizacionais.class);
    }

    /**
     * Creates an instance of type Ativos_de_processos_organizacionais.  Modifies the underlying ontology.
     */
    public Ativos_de_processos_organizacionais createAtivos_de_processos_organizacionais(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_processos_organizacionais.class);
    }

    /**
     * Gets an instance of type Ativos_de_processos_organizacionais with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ativos_de_processos_organizacionais getAtivos_de_processos_organizacionais(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_processos_organizacionais.class);
    }

    /**
     * Gets all instances of Ativos_de_processos_organizacionais from the ontology.
     */
    public Collection<? extends Ativos_de_processos_organizacionais> getAllAtivos_de_processos_organizacionaisInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS, DefaultAtivos_de_processos_organizacionais.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_2", Ativos_de_processos_organizacionais_2.class, DefaultAtivos_de_processos_organizacionais_2.class);
    }

    /**
     * Creates an instance of type Ativos_de_processos_organizacionais_2.  Modifies the underlying ontology.
     */
    public Ativos_de_processos_organizacionais_2 createAtivos_de_processos_organizacionais_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_2, DefaultAtivos_de_processos_organizacionais_2.class);
    }

    /**
     * Gets an instance of type Ativos_de_processos_organizacionais_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ativos_de_processos_organizacionais_2 getAtivos_de_processos_organizacionais_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_2, DefaultAtivos_de_processos_organizacionais_2.class);
    }

    /**
     * Gets all instances of Ativos_de_processos_organizacionais_2 from the ontology.
     */
    public Collection<? extends Ativos_de_processos_organizacionais_2> getAllAtivos_de_processos_organizacionais_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_2, DefaultAtivos_de_processos_organizacionais_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_4", Ativos_de_processos_organizacionais_4.class, DefaultAtivos_de_processos_organizacionais_4.class);
    }

    /**
     * Creates an instance of type Ativos_de_processos_organizacionais_4.  Modifies the underlying ontology.
     */
    public Ativos_de_processos_organizacionais_4 createAtivos_de_processos_organizacionais_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_4, DefaultAtivos_de_processos_organizacionais_4.class);
    }

    /**
     * Gets an instance of type Ativos_de_processos_organizacionais_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ativos_de_processos_organizacionais_4 getAtivos_de_processos_organizacionais_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_4, DefaultAtivos_de_processos_organizacionais_4.class);
    }

    /**
     * Gets all instances of Ativos_de_processos_organizacionais_4 from the ontology.
     */
    public Collection<? extends Ativos_de_processos_organizacionais_4> getAllAtivos_de_processos_organizacionais_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_4, DefaultAtivos_de_processos_organizacionais_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_atualizações
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ativos_de_processos_organizacionais_atualizações", Ativos_de_processos_organizacionais_atualizações.class, DefaultAtivos_de_processos_organizacionais_atualizações.class);
    }

    /**
     * Creates an instance of type Ativos_de_processos_organizacionais_atualizações.  Modifies the underlying ontology.
     */
    public Ativos_de_processos_organizacionais_atualizações createAtivos_de_processos_organizacionais_atualizações(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_ATUALIZAÇÕES, DefaultAtivos_de_processos_organizacionais_atualizações.class);
    }

    /**
     * Gets an instance of type Ativos_de_processos_organizacionais_atualizações with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ativos_de_processos_organizacionais_atualizações getAtivos_de_processos_organizacionais_atualizações(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_ATUALIZAÇÕES, DefaultAtivos_de_processos_organizacionais_atualizações.class);
    }

    /**
     * Gets all instances of Ativos_de_processos_organizacionais_atualizações from the ontology.
     */
    public Collection<? extends Ativos_de_processos_organizacionais_atualizações> getAllAtivos_de_processos_organizacionais_atualizaçõesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ATIVOS_DE_PROCESSOS_ORGANIZACIONAIS_ATUALIZAÇÕES, DefaultAtivos_de_processos_organizacionais_atualizações.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Auditorias_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Auditorias_de_riscos", Auditorias_de_riscos.class, DefaultAuditorias_de_riscos.class);
    }

    /**
     * Creates an instance of type Auditorias_de_riscos.  Modifies the underlying ontology.
     */
    public Auditorias_de_riscos createAuditorias_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AUDITORIAS_DE_RISCOS, DefaultAuditorias_de_riscos.class);
    }

    /**
     * Gets an instance of type Auditorias_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Auditorias_de_riscos getAuditorias_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AUDITORIAS_DE_RISCOS, DefaultAuditorias_de_riscos.class);
    }

    /**
     * Gets all instances of Auditorias_de_riscos from the ontology.
     */
    public Collection<? extends Auditorias_de_riscos> getAllAuditorias_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AUDITORIAS_DE_RISCOS, DefaultAuditorias_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_da_urgência_de_risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_da_urgência_de_risco", Avaliação_da_urgência_de_risco.class, DefaultAvaliação_da_urgência_de_risco.class);
    }

    /**
     * Creates an instance of type Avaliação_da_urgência_de_risco.  Modifies the underlying ontology.
     */
    public Avaliação_da_urgência_de_risco createAvaliação_da_urgência_de_risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DA_URGÊNCIA_DE_RISCO, DefaultAvaliação_da_urgência_de_risco.class);
    }

    /**
     * Gets an instance of type Avaliação_da_urgência_de_risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Avaliação_da_urgência_de_risco getAvaliação_da_urgência_de_risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DA_URGÊNCIA_DE_RISCO, DefaultAvaliação_da_urgência_de_risco.class);
    }

    /**
     * Gets all instances of Avaliação_da_urgência_de_risco from the ontology.
     */
    public Collection<? extends Avaliação_da_urgência_de_risco> getAllAvaliação_da_urgência_de_riscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AVALIAÇÃO_DA_URGÊNCIA_DE_RISCO, DefaultAvaliação_da_urgência_de_risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_de_probabilidade_e_impacto_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_de_probabilidade_e_impacto_de_riscos", Avaliação_de_probabilidade_e_impacto_de_riscos.class, DefaultAvaliação_de_probabilidade_e_impacto_de_riscos.class);
    }

    /**
     * Creates an instance of type Avaliação_de_probabilidade_e_impacto_de_riscos.  Modifies the underlying ontology.
     */
    public Avaliação_de_probabilidade_e_impacto_de_riscos createAvaliação_de_probabilidade_e_impacto_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DE_PROBABILIDADE_E_IMPACTO_DE_RISCOS, DefaultAvaliação_de_probabilidade_e_impacto_de_riscos.class);
    }

    /**
     * Gets an instance of type Avaliação_de_probabilidade_e_impacto_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Avaliação_de_probabilidade_e_impacto_de_riscos getAvaliação_de_probabilidade_e_impacto_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DE_PROBABILIDADE_E_IMPACTO_DE_RISCOS, DefaultAvaliação_de_probabilidade_e_impacto_de_riscos.class);
    }

    /**
     * Gets all instances of Avaliação_de_probabilidade_e_impacto_de_riscos from the ontology.
     */
    public Collection<? extends Avaliação_de_probabilidade_e_impacto_de_riscos> getAllAvaliação_de_probabilidade_e_impacto_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AVALIAÇÃO_DE_PROBABILIDADE_E_IMPACTO_DE_RISCOS, DefaultAvaliação_de_probabilidade_e_impacto_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_de_quantidade_dos_dados_sobre_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Avaliação_de_quantidade_dos_dados_sobre_riscos", Avaliação_de_quantidade_dos_dados_sobre_riscos.class, DefaultAvaliação_de_quantidade_dos_dados_sobre_riscos.class);
    }

    /**
     * Creates an instance of type Avaliação_de_quantidade_dos_dados_sobre_riscos.  Modifies the underlying ontology.
     */
    public Avaliação_de_quantidade_dos_dados_sobre_riscos createAvaliação_de_quantidade_dos_dados_sobre_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DE_QUANTIDADE_DOS_DADOS_SOBRE_RISCOS, DefaultAvaliação_de_quantidade_dos_dados_sobre_riscos.class);
    }

    /**
     * Gets an instance of type Avaliação_de_quantidade_dos_dados_sobre_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Avaliação_de_quantidade_dos_dados_sobre_riscos getAvaliação_de_quantidade_dos_dados_sobre_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AVALIAÇÃO_DE_QUANTIDADE_DOS_DADOS_SOBRE_RISCOS, DefaultAvaliação_de_quantidade_dos_dados_sobre_riscos.class);
    }

    /**
     * Gets all instances of Avaliação_de_quantidade_dos_dados_sobre_riscos from the ontology.
     */
    public Collection<? extends Avaliação_de_quantidade_dos_dados_sobre_riscos> getAllAvaliação_de_quantidade_dos_dados_sobre_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AVALIAÇÃO_DE_QUANTIDADE_DOS_DADOS_SOBRE_RISCOS, DefaultAvaliação_de_quantidade_dos_dados_sobre_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ações_corretivas_recomendadas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ações_corretivas_recomendadas", Ações_corretivas_recomendadas.class, DefaultAções_corretivas_recomendadas.class);
    }

    /**
     * Creates an instance of type Ações_corretivas_recomendadas.  Modifies the underlying ontology.
     */
    public Ações_corretivas_recomendadas createAções_corretivas_recomendadas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AÇÕES_CORRETIVAS_RECOMENDADAS, DefaultAções_corretivas_recomendadas.class);
    }

    /**
     * Gets an instance of type Ações_corretivas_recomendadas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ações_corretivas_recomendadas getAções_corretivas_recomendadas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AÇÕES_CORRETIVAS_RECOMENDADAS, DefaultAções_corretivas_recomendadas.class);
    }

    /**
     * Gets all instances of Ações_corretivas_recomendadas from the ontology.
     */
    public Collection<? extends Ações_corretivas_recomendadas> getAllAções_corretivas_recomendadasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AÇÕES_CORRETIVAS_RECOMENDADAS, DefaultAções_corretivas_recomendadas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ações_preventivas_recomendadas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ações_preventivas_recomendadas", Ações_preventivas_recomendadas.class, DefaultAções_preventivas_recomendadas.class);
    }

    /**
     * Creates an instance of type Ações_preventivas_recomendadas.  Modifies the underlying ontology.
     */
    public Ações_preventivas_recomendadas createAções_preventivas_recomendadas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_AÇÕES_PREVENTIVAS_RECOMENDADAS, DefaultAções_preventivas_recomendadas.class);
    }

    /**
     * Gets an instance of type Ações_preventivas_recomendadas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ações_preventivas_recomendadas getAções_preventivas_recomendadas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_AÇÕES_PREVENTIVAS_RECOMENDADAS, DefaultAções_preventivas_recomendadas.class);
    }

    /**
     * Gets all instances of Ações_preventivas_recomendadas from the ontology.
     */
    public Collection<? extends Ações_preventivas_recomendadas> getAllAções_preventivas_recomendadasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_AÇÕES_PREVENTIVAS_RECOMENDADAS, DefaultAções_preventivas_recomendadas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Categorização_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Categorização_de_riscos", Categorização_de_riscos.class, DefaultCategorização_de_riscos.class);
    }

    /**
     * Creates an instance of type Categorização_de_riscos.  Modifies the underlying ontology.
     */
    public Categorização_de_riscos createCategorização_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_CATEGORIZAÇÃO_DE_RISCOS, DefaultCategorização_de_riscos.class);
    }

    /**
     * Gets an instance of type Categorização_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Categorização_de_riscos getCategorização_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_CATEGORIZAÇÃO_DE_RISCOS, DefaultCategorização_de_riscos.class);
    }

    /**
     * Gets all instances of Categorização_de_riscos from the ontology.
     */
    public Collection<? extends Categorização_de_riscos> getAllCategorização_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_CATEGORIZAÇÃO_DE_RISCOS, DefaultCategorização_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto", Declaração_do_escopo_do_projeto.class, DefaultDeclaração_do_escopo_do_projeto.class);
    }

    /**
     * Creates an instance of type Declaração_do_escopo_do_projeto.  Modifies the underlying ontology.
     */
    public Declaração_do_escopo_do_projeto createDeclaração_do_escopo_do_projeto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO, DefaultDeclaração_do_escopo_do_projeto.class);
    }

    /**
     * Gets an instance of type Declaração_do_escopo_do_projeto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Declaração_do_escopo_do_projeto getDeclaração_do_escopo_do_projeto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO, DefaultDeclaração_do_escopo_do_projeto.class);
    }

    /**
     * Gets all instances of Declaração_do_escopo_do_projeto from the ontology.
     */
    public Collection<? extends Declaração_do_escopo_do_projeto> getAllDeclaração_do_escopo_do_projetoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO, DefaultDeclaração_do_escopo_do_projeto.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_2", Declaração_do_escopo_do_projeto_2.class, DefaultDeclaração_do_escopo_do_projeto_2.class);
    }

    /**
     * Creates an instance of type Declaração_do_escopo_do_projeto_2.  Modifies the underlying ontology.
     */
    public Declaração_do_escopo_do_projeto_2 createDeclaração_do_escopo_do_projeto_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_2, DefaultDeclaração_do_escopo_do_projeto_2.class);
    }

    /**
     * Gets an instance of type Declaração_do_escopo_do_projeto_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Declaração_do_escopo_do_projeto_2 getDeclaração_do_escopo_do_projeto_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_2, DefaultDeclaração_do_escopo_do_projeto_2.class);
    }

    /**
     * Gets all instances of Declaração_do_escopo_do_projeto_2 from the ontology.
     */
    public Collection<? extends Declaração_do_escopo_do_projeto_2> getAllDeclaração_do_escopo_do_projeto_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_2, DefaultDeclaração_do_escopo_do_projeto_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_3
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_3", Declaração_do_escopo_do_projeto_3.class, DefaultDeclaração_do_escopo_do_projeto_3.class);
    }

    /**
     * Creates an instance of type Declaração_do_escopo_do_projeto_3.  Modifies the underlying ontology.
     */
    public Declaração_do_escopo_do_projeto_3 createDeclaração_do_escopo_do_projeto_3(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_3, DefaultDeclaração_do_escopo_do_projeto_3.class);
    }

    /**
     * Gets an instance of type Declaração_do_escopo_do_projeto_3 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Declaração_do_escopo_do_projeto_3 getDeclaração_do_escopo_do_projeto_3(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_3, DefaultDeclaração_do_escopo_do_projeto_3.class);
    }

    /**
     * Gets all instances of Declaração_do_escopo_do_projeto_3 from the ontology.
     */
    public Collection<? extends Declaração_do_escopo_do_projeto_3> getAllDeclaração_do_escopo_do_projeto_3Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_3, DefaultDeclaração_do_escopo_do_projeto_3.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Declaração_do_escopo_do_projeto_4", Declaração_do_escopo_do_projeto_4.class, DefaultDeclaração_do_escopo_do_projeto_4.class);
    }

    /**
     * Creates an instance of type Declaração_do_escopo_do_projeto_4.  Modifies the underlying ontology.
     */
    public Declaração_do_escopo_do_projeto_4 createDeclaração_do_escopo_do_projeto_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_4, DefaultDeclaração_do_escopo_do_projeto_4.class);
    }

    /**
     * Gets an instance of type Declaração_do_escopo_do_projeto_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Declaração_do_escopo_do_projeto_4 getDeclaração_do_escopo_do_projeto_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_4, DefaultDeclaração_do_escopo_do_projeto_4.class);
    }

    /**
     * Gets all instances of Declaração_do_escopo_do_projeto_4 from the ontology.
     */
    public Collection<? extends Declaração_do_escopo_do_projeto_4> getAllDeclaração_do_escopo_do_projeto_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_DECLARAÇÃO_DO_ESCOPO_DO_PROJETO_4, DefaultDeclaração_do_escopo_do_projeto_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas", Entradas.class, DefaultEntradas.class);
    }

    /**
     * Creates an instance of type Entradas.  Modifies the underlying ontology.
     */
    public Entradas createEntradas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS, DefaultEntradas.class);
    }

    /**
     * Gets an instance of type Entradas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas getEntradas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS, DefaultEntradas.class);
    }

    /**
     * Gets all instances of Entradas from the ontology.
     */
    public Collection<? extends Entradas> getAllEntradasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS, DefaultEntradas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_2", Entradas_2.class, DefaultEntradas_2.class);
    }

    /**
     * Creates an instance of type Entradas_2.  Modifies the underlying ontology.
     */
    public Entradas_2 createEntradas_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_2, DefaultEntradas_2.class);
    }

    /**
     * Gets an instance of type Entradas_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas_2 getEntradas_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_2, DefaultEntradas_2.class);
    }

    /**
     * Gets all instances of Entradas_2 from the ontology.
     */
    public Collection<? extends Entradas_2> getAllEntradas_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS_2, DefaultEntradas_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_3
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_3", Entradas_3.class, DefaultEntradas_3.class);
    }

    /**
     * Creates an instance of type Entradas_3.  Modifies the underlying ontology.
     */
    public Entradas_3 createEntradas_3(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_3, DefaultEntradas_3.class);
    }

    /**
     * Gets an instance of type Entradas_3 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas_3 getEntradas_3(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_3, DefaultEntradas_3.class);
    }

    /**
     * Gets all instances of Entradas_3 from the ontology.
     */
    public Collection<? extends Entradas_3> getAllEntradas_3Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS_3, DefaultEntradas_3.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_4", Entradas_4.class, DefaultEntradas_4.class);
    }

    /**
     * Creates an instance of type Entradas_4.  Modifies the underlying ontology.
     */
    public Entradas_4 createEntradas_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_4, DefaultEntradas_4.class);
    }

    /**
     * Gets an instance of type Entradas_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas_4 getEntradas_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_4, DefaultEntradas_4.class);
    }

    /**
     * Gets all instances of Entradas_4 from the ontology.
     */
    public Collection<? extends Entradas_4> getAllEntradas_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS_4, DefaultEntradas_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_5
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_5", Entradas_5.class, DefaultEntradas_5.class);
    }

    /**
     * Creates an instance of type Entradas_5.  Modifies the underlying ontology.
     */
    public Entradas_5 createEntradas_5(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_5, DefaultEntradas_5.class);
    }

    /**
     * Gets an instance of type Entradas_5 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas_5 getEntradas_5(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_5, DefaultEntradas_5.class);
    }

    /**
     * Gets all instances of Entradas_5 from the ontology.
     */
    public Collection<? extends Entradas_5> getAllEntradas_5Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS_5, DefaultEntradas_5.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Entradas_6", Entradas_6.class, DefaultEntradas_6.class);
    }

    /**
     * Creates an instance of type Entradas_6.  Modifies the underlying ontology.
     */
    public Entradas_6 createEntradas_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_6, DefaultEntradas_6.class);
    }

    /**
     * Gets an instance of type Entradas_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Entradas_6 getEntradas_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ENTRADAS_6, DefaultEntradas_6.class);
    }

    /**
     * Gets all instances of Entradas_6 from the ontology.
     */
    public Collection<? extends Entradas_6> getAllEntradas_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ENTRADAS_6, DefaultEntradas_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategia_para_respostas_contigenciadas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategia_para_respostas_contigenciadas", Estrategia_para_respostas_contigenciadas.class, DefaultEstrategia_para_respostas_contigenciadas.class);
    }

    /**
     * Creates an instance of type Estrategia_para_respostas_contigenciadas.  Modifies the underlying ontology.
     */
    public Estrategia_para_respostas_contigenciadas createEstrategia_para_respostas_contigenciadas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIA_PARA_RESPOSTAS_CONTIGENCIADAS, DefaultEstrategia_para_respostas_contigenciadas.class);
    }

    /**
     * Gets an instance of type Estrategia_para_respostas_contigenciadas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Estrategia_para_respostas_contigenciadas getEstrategia_para_respostas_contigenciadas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIA_PARA_RESPOSTAS_CONTIGENCIADAS, DefaultEstrategia_para_respostas_contigenciadas.class);
    }

    /**
     * Gets all instances of Estrategia_para_respostas_contigenciadas from the ontology.
     */
    public Collection<? extends Estrategia_para_respostas_contigenciadas> getAllEstrategia_para_respostas_contigenciadasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ESTRATEGIA_PARA_RESPOSTAS_CONTIGENCIADAS, DefaultEstrategia_para_respostas_contigenciadas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_ameaças_e_oportunidades
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_ameaças_e_oportunidades", Estrategias_para_ameaças_e_oportunidades.class, DefaultEstrategias_para_ameaças_e_oportunidades.class);
    }

    /**
     * Creates an instance of type Estrategias_para_ameaças_e_oportunidades.  Modifies the underlying ontology.
     */
    public Estrategias_para_ameaças_e_oportunidades createEstrategias_para_ameaças_e_oportunidades(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_AMEAÇAS_E_OPORTUNIDADES, DefaultEstrategias_para_ameaças_e_oportunidades.class);
    }

    /**
     * Gets an instance of type Estrategias_para_ameaças_e_oportunidades with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Estrategias_para_ameaças_e_oportunidades getEstrategias_para_ameaças_e_oportunidades(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_AMEAÇAS_E_OPORTUNIDADES, DefaultEstrategias_para_ameaças_e_oportunidades.class);
    }

    /**
     * Gets all instances of Estrategias_para_ameaças_e_oportunidades from the ontology.
     */
    public Collection<? extends Estrategias_para_ameaças_e_oportunidades> getAllEstrategias_para_ameaças_e_oportunidadesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ESTRATEGIAS_PARA_AMEAÇAS_E_OPORTUNIDADES, DefaultEstrategias_para_ameaças_e_oportunidades.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_riscos_negativos_ou_ameaças
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_riscos_negativos_ou_ameaças", Estrategias_para_riscos_negativos_ou_ameaças.class, DefaultEstrategias_para_riscos_negativos_ou_ameaças.class);
    }

    /**
     * Creates an instance of type Estrategias_para_riscos_negativos_ou_ameaças.  Modifies the underlying ontology.
     */
    public Estrategias_para_riscos_negativos_ou_ameaças createEstrategias_para_riscos_negativos_ou_ameaças(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_NEGATIVOS_OU_AMEAÇAS, DefaultEstrategias_para_riscos_negativos_ou_ameaças.class);
    }

    /**
     * Gets an instance of type Estrategias_para_riscos_negativos_ou_ameaças with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Estrategias_para_riscos_negativos_ou_ameaças getEstrategias_para_riscos_negativos_ou_ameaças(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_NEGATIVOS_OU_AMEAÇAS, DefaultEstrategias_para_riscos_negativos_ou_ameaças.class);
    }

    /**
     * Gets all instances of Estrategias_para_riscos_negativos_ou_ameaças from the ontology.
     */
    public Collection<? extends Estrategias_para_riscos_negativos_ou_ameaças> getAllEstrategias_para_riscos_negativos_ou_ameaçasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_NEGATIVOS_OU_AMEAÇAS, DefaultEstrategias_para_riscos_negativos_ou_ameaças.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_riscos_positivos_ou_oportunidades
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Estrategias_para_riscos_positivos_ou_oportunidades", Estrategias_para_riscos_positivos_ou_oportunidades.class, DefaultEstrategias_para_riscos_positivos_ou_oportunidades.class);
    }

    /**
     * Creates an instance of type Estrategias_para_riscos_positivos_ou_oportunidades.  Modifies the underlying ontology.
     */
    public Estrategias_para_riscos_positivos_ou_oportunidades createEstrategias_para_riscos_positivos_ou_oportunidades(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_POSITIVOS_OU_OPORTUNIDADES, DefaultEstrategias_para_riscos_positivos_ou_oportunidades.class);
    }

    /**
     * Gets an instance of type Estrategias_para_riscos_positivos_ou_oportunidades with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Estrategias_para_riscos_positivos_ou_oportunidades getEstrategias_para_riscos_positivos_ou_oportunidades(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_POSITIVOS_OU_OPORTUNIDADES, DefaultEstrategias_para_riscos_positivos_ou_oportunidades.class);
    }

    /**
     * Gets all instances of Estrategias_para_riscos_positivos_ou_oportunidades from the ontology.
     */
    public Collection<? extends Estrategias_para_riscos_positivos_ou_oportunidades> getAllEstrategias_para_riscos_positivos_ou_oportunidadesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_ESTRATEGIAS_PARA_RISCOS_POSITIVOS_OU_OPORTUNIDADES, DefaultEstrategias_para_riscos_positivos_ou_oportunidades.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Fatores_ambientais_da_empresa
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Fatores_ambientais_da_empresa", Fatores_ambientais_da_empresa.class, DefaultFatores_ambientais_da_empresa.class);
    }

    /**
     * Creates an instance of type Fatores_ambientais_da_empresa.  Modifies the underlying ontology.
     */
    public Fatores_ambientais_da_empresa createFatores_ambientais_da_empresa(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA, DefaultFatores_ambientais_da_empresa.class);
    }

    /**
     * Gets an instance of type Fatores_ambientais_da_empresa with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Fatores_ambientais_da_empresa getFatores_ambientais_da_empresa(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA, DefaultFatores_ambientais_da_empresa.class);
    }

    /**
     * Gets all instances of Fatores_ambientais_da_empresa from the ontology.
     */
    public Collection<? extends Fatores_ambientais_da_empresa> getAllFatores_ambientais_da_empresaInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA, DefaultFatores_ambientais_da_empresa.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Fatores_ambientais_da_empresa_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Fatores_ambientais_da_empresa_2", Fatores_ambientais_da_empresa_2.class, DefaultFatores_ambientais_da_empresa_2.class);
    }

    /**
     * Creates an instance of type Fatores_ambientais_da_empresa_2.  Modifies the underlying ontology.
     */
    public Fatores_ambientais_da_empresa_2 createFatores_ambientais_da_empresa_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA_2, DefaultFatores_ambientais_da_empresa_2.class);
    }

    /**
     * Gets an instance of type Fatores_ambientais_da_empresa_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Fatores_ambientais_da_empresa_2 getFatores_ambientais_da_empresa_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA_2, DefaultFatores_ambientais_da_empresa_2.class);
    }

    /**
     * Gets all instances of Fatores_ambientais_da_empresa_2 from the ontology.
     */
    public Collection<? extends Fatores_ambientais_da_empresa_2> getAllFatores_ambientais_da_empresa_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FATORES_AMBIENTAIS_DA_EMPRESA_2, DefaultFatores_ambientais_da_empresa_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_tecnicas_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_tecnicas_2", Ferramentas_e_tecnicas_2.class, DefaultFerramentas_e_tecnicas_2.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_tecnicas_2.  Modifies the underlying ontology.
     */
    public Ferramentas_e_tecnicas_2 createFerramentas_e_tecnicas_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TECNICAS_2, DefaultFerramentas_e_tecnicas_2.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_tecnicas_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_tecnicas_2 getFerramentas_e_tecnicas_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TECNICAS_2, DefaultFerramentas_e_tecnicas_2.class);
    }

    /**
     * Gets all instances of Ferramentas_e_tecnicas_2 from the ontology.
     */
    public Collection<? extends Ferramentas_e_tecnicas_2> getAllFerramentas_e_tecnicas_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TECNICAS_2, DefaultFerramentas_e_tecnicas_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas", Ferramentas_e_técnicas.class, DefaultFerramentas_e_técnicas.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_técnicas.  Modifies the underlying ontology.
     */
    public Ferramentas_e_técnicas createFerramentas_e_técnicas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS, DefaultFerramentas_e_técnicas.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_técnicas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_técnicas getFerramentas_e_técnicas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS, DefaultFerramentas_e_técnicas.class);
    }

    /**
     * Gets all instances of Ferramentas_e_técnicas from the ontology.
     */
    public Collection<? extends Ferramentas_e_técnicas> getAllFerramentas_e_técnicasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS, DefaultFerramentas_e_técnicas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_3
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_3", Ferramentas_e_técnicas_3.class, DefaultFerramentas_e_técnicas_3.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_técnicas_3.  Modifies the underlying ontology.
     */
    public Ferramentas_e_técnicas_3 createFerramentas_e_técnicas_3(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_3, DefaultFerramentas_e_técnicas_3.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_técnicas_3 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_técnicas_3 getFerramentas_e_técnicas_3(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_3, DefaultFerramentas_e_técnicas_3.class);
    }

    /**
     * Gets all instances of Ferramentas_e_técnicas_3 from the ontology.
     */
    public Collection<? extends Ferramentas_e_técnicas_3> getAllFerramentas_e_técnicas_3Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_3, DefaultFerramentas_e_técnicas_3.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_4", Ferramentas_e_técnicas_4.class, DefaultFerramentas_e_técnicas_4.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_técnicas_4.  Modifies the underlying ontology.
     */
    public Ferramentas_e_técnicas_4 createFerramentas_e_técnicas_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_4, DefaultFerramentas_e_técnicas_4.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_técnicas_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_técnicas_4 getFerramentas_e_técnicas_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_4, DefaultFerramentas_e_técnicas_4.class);
    }

    /**
     * Gets all instances of Ferramentas_e_técnicas_4 from the ontology.
     */
    public Collection<? extends Ferramentas_e_técnicas_4> getAllFerramentas_e_técnicas_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_4, DefaultFerramentas_e_técnicas_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_5
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_5", Ferramentas_e_técnicas_5.class, DefaultFerramentas_e_técnicas_5.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_técnicas_5.  Modifies the underlying ontology.
     */
    public Ferramentas_e_técnicas_5 createFerramentas_e_técnicas_5(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_5, DefaultFerramentas_e_técnicas_5.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_técnicas_5 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_técnicas_5 getFerramentas_e_técnicas_5(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_5, DefaultFerramentas_e_técnicas_5.class);
    }

    /**
     * Gets all instances of Ferramentas_e_técnicas_5 from the ontology.
     */
    public Collection<? extends Ferramentas_e_técnicas_5> getAllFerramentas_e_técnicas_5Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_5, DefaultFerramentas_e_técnicas_5.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Ferramentas_e_técnicas_6", Ferramentas_e_técnicas_6.class, DefaultFerramentas_e_técnicas_6.class);
    }

    /**
     * Creates an instance of type Ferramentas_e_técnicas_6.  Modifies the underlying ontology.
     */
    public Ferramentas_e_técnicas_6 createFerramentas_e_técnicas_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_6, DefaultFerramentas_e_técnicas_6.class);
    }

    /**
     * Gets an instance of type Ferramentas_e_técnicas_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Ferramentas_e_técnicas_6 getFerramentas_e_técnicas_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_6, DefaultFerramentas_e_técnicas_6.class);
    }

    /**
     * Gets all instances of Ferramentas_e_técnicas_6 from the ontology.
     */
    public Collection<? extends Ferramentas_e_técnicas_6> getAllFerramentas_e_técnicas_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_FERRAMENTAS_E_TÉCNICAS_6, DefaultFerramentas_e_técnicas_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Gerencia_de_Risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Gerencia_de_Risco", Gerencia_de_Risco.class, DefaultGerencia_de_Risco.class);
    }

    /**
     * Creates an instance of type Gerencia_de_Risco.  Modifies the underlying ontology.
     */
    public Gerencia_de_Risco createGerencia_de_Risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_GERENCIA_DE_RISCO, DefaultGerencia_de_Risco.class);
    }

    /**
     * Gets an instance of type Gerencia_de_Risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Gerencia_de_Risco getGerencia_de_Risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_GERENCIA_DE_RISCO, DefaultGerencia_de_Risco.class);
    }

    /**
     * Gets all instances of Gerencia_de_Risco from the ontology.
     */
    public Collection<? extends Gerencia_de_Risco> getAllGerencia_de_RiscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_GERENCIA_DE_RISCO, DefaultGerencia_de_Risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Identificação_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Identificação_de_riscos", Identificação_de_riscos.class, DefaultIdentificação_de_riscos.class);
    }

    /**
     * Creates an instance of type Identificação_de_riscos.  Modifies the underlying ontology.
     */
    public Identificação_de_riscos createIdentificação_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_IDENTIFICAÇÃO_DE_RISCOS, DefaultIdentificação_de_riscos.class);
    }

    /**
     * Gets an instance of type Identificação_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Identificação_de_riscos getIdentificação_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_IDENTIFICAÇÃO_DE_RISCOS, DefaultIdentificação_de_riscos.class);
    }

    /**
     * Gets all instances of Identificação_de_riscos from the ontology.
     */
    public Collection<? extends Identificação_de_riscos> getAllIdentificação_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_IDENTIFICAÇÃO_DE_RISCOS, DefaultIdentificação_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Informações_sobre_o_desempenho_do_trabalho
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Informações_sobre_o_desempenho_do_trabalho", Informações_sobre_o_desempenho_do_trabalho.class, DefaultInformações_sobre_o_desempenho_do_trabalho.class);
    }

    /**
     * Creates an instance of type Informações_sobre_o_desempenho_do_trabalho.  Modifies the underlying ontology.
     */
    public Informações_sobre_o_desempenho_do_trabalho createInformações_sobre_o_desempenho_do_trabalho(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_INFORMAÇÕES_SOBRE_O_DESEMPENHO_DO_TRABALHO, DefaultInformações_sobre_o_desempenho_do_trabalho.class);
    }

    /**
     * Gets an instance of type Informações_sobre_o_desempenho_do_trabalho with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Informações_sobre_o_desempenho_do_trabalho getInformações_sobre_o_desempenho_do_trabalho(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_INFORMAÇÕES_SOBRE_O_DESEMPENHO_DO_TRABALHO, DefaultInformações_sobre_o_desempenho_do_trabalho.class);
    }

    /**
     * Gets all instances of Informações_sobre_o_desempenho_do_trabalho from the ontology.
     */
    public Collection<? extends Informações_sobre_o_desempenho_do_trabalho> getAllInformações_sobre_o_desempenho_do_trabalhoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_INFORMAÇÕES_SOBRE_O_DESEMPENHO_DO_TRABALHO, DefaultInformações_sobre_o_desempenho_do_trabalho.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Matriz_de_probabilidade_e_impacto
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Matriz_de_probabilidade_e_impacto", Matriz_de_probabilidade_e_impacto.class, DefaultMatriz_de_probabilidade_e_impacto.class);
    }

    /**
     * Creates an instance of type Matriz_de_probabilidade_e_impacto.  Modifies the underlying ontology.
     */
    public Matriz_de_probabilidade_e_impacto createMatriz_de_probabilidade_e_impacto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MATRIZ_DE_PROBABILIDADE_E_IMPACTO, DefaultMatriz_de_probabilidade_e_impacto.class);
    }

    /**
     * Gets an instance of type Matriz_de_probabilidade_e_impacto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Matriz_de_probabilidade_e_impacto getMatriz_de_probabilidade_e_impacto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MATRIZ_DE_PROBABILIDADE_E_IMPACTO, DefaultMatriz_de_probabilidade_e_impacto.class);
    }

    /**
     * Gets all instances of Matriz_de_probabilidade_e_impacto from the ontology.
     */
    public Collection<? extends Matriz_de_probabilidade_e_impacto> getAllMatriz_de_probabilidade_e_impactoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MATRIZ_DE_PROBABILIDADE_E_IMPACTO, DefaultMatriz_de_probabilidade_e_impacto.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Medição_do_desempenho_técnico
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Medição_do_desempenho_técnico", Medição_do_desempenho_técnico.class, DefaultMedição_do_desempenho_técnico.class);
    }

    /**
     * Creates an instance of type Medição_do_desempenho_técnico.  Modifies the underlying ontology.
     */
    public Medição_do_desempenho_técnico createMedição_do_desempenho_técnico(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MEDIÇÃO_DO_DESEMPENHO_TÉCNICO, DefaultMedição_do_desempenho_técnico.class);
    }

    /**
     * Gets an instance of type Medição_do_desempenho_técnico with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Medição_do_desempenho_técnico getMedição_do_desempenho_técnico(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MEDIÇÃO_DO_DESEMPENHO_TÉCNICO, DefaultMedição_do_desempenho_técnico.class);
    }

    /**
     * Gets all instances of Medição_do_desempenho_técnico from the ontology.
     */
    public Collection<? extends Medição_do_desempenho_técnico> getAllMedição_do_desempenho_técnicoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MEDIÇÃO_DO_DESEMPENHO_TÉCNICO, DefaultMedição_do_desempenho_técnico.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Monitoramento_e_controle_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Monitoramento_e_controle_de_riscos", Monitoramento_e_controle_de_riscos.class, DefaultMonitoramento_e_controle_de_riscos.class);
    }

    /**
     * Creates an instance of type Monitoramento_e_controle_de_riscos.  Modifies the underlying ontology.
     */
    public Monitoramento_e_controle_de_riscos createMonitoramento_e_controle_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MONITORAMENTO_E_CONTROLE_DE_RISCOS, DefaultMonitoramento_e_controle_de_riscos.class);
    }

    /**
     * Gets an instance of type Monitoramento_e_controle_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Monitoramento_e_controle_de_riscos getMonitoramento_e_controle_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MONITORAMENTO_E_CONTROLE_DE_RISCOS, DefaultMonitoramento_e_controle_de_riscos.class);
    }

    /**
     * Gets all instances of Monitoramento_e_controle_de_riscos from the ontology.
     */
    public Collection<? extends Monitoramento_e_controle_de_riscos> getAllMonitoramento_e_controle_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MONITORAMENTO_E_CONTROLE_DE_RISCOS, DefaultMonitoramento_e_controle_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Mudanças_solicitadas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Mudanças_solicitadas", Mudanças_solicitadas.class, DefaultMudanças_solicitadas.class);
    }

    /**
     * Creates an instance of type Mudanças_solicitadas.  Modifies the underlying ontology.
     */
    public Mudanças_solicitadas createMudanças_solicitadas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_MUDANÇAS_SOLICITADAS, DefaultMudanças_solicitadas.class);
    }

    /**
     * Gets an instance of type Mudanças_solicitadas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Mudanças_solicitadas getMudanças_solicitadas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_MUDANÇAS_SOLICITADAS, DefaultMudanças_solicitadas.class);
    }

    /**
     * Gets all instances of Mudanças_solicitadas from the ontology.
     */
    public Collection<? extends Mudanças_solicitadas> getAllMudanças_solicitadasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_MUDANÇAS_SOLICITADAS, DefaultMudanças_solicitadas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Planejamento_de_respostas_a_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Planejamento_de_respostas_a_riscos", Planejamento_de_respostas_a_riscos.class, DefaultPlanejamento_de_respostas_a_riscos.class);
    }

    /**
     * Creates an instance of type Planejamento_de_respostas_a_riscos.  Modifies the underlying ontology.
     */
    public Planejamento_de_respostas_a_riscos createPlanejamento_de_respostas_a_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANEJAMENTO_DE_RESPOSTAS_A_RISCOS, DefaultPlanejamento_de_respostas_a_riscos.class);
    }

    /**
     * Gets an instance of type Planejamento_de_respostas_a_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Planejamento_de_respostas_a_riscos getPlanejamento_de_respostas_a_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANEJAMENTO_DE_RESPOSTAS_A_RISCOS, DefaultPlanejamento_de_respostas_a_riscos.class);
    }

    /**
     * Gets all instances of Planejamento_de_respostas_a_riscos from the ontology.
     */
    public Collection<? extends Planejamento_de_respostas_a_riscos> getAllPlanejamento_de_respostas_a_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANEJAMENTO_DE_RESPOSTAS_A_RISCOS, DefaultPlanejamento_de_respostas_a_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Planejamento_do_Gerenciamneto_de_Risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Planejamento_do_Gerenciamneto_de_Risco", Planejamento_do_Gerenciamneto_de_Risco.class, DefaultPlanejamento_do_Gerenciamneto_de_Risco.class);
    }

    /**
     * Creates an instance of type Planejamento_do_Gerenciamneto_de_Risco.  Modifies the underlying ontology.
     */
    public Planejamento_do_Gerenciamneto_de_Risco createPlanejamento_do_Gerenciamneto_de_Risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANEJAMENTO_DO_GERENCIAMNETO_DE_RISCO, DefaultPlanejamento_do_Gerenciamneto_de_Risco.class);
    }

    /**
     * Gets an instance of type Planejamento_do_Gerenciamneto_de_Risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Planejamento_do_Gerenciamneto_de_Risco getPlanejamento_do_Gerenciamneto_de_Risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANEJAMENTO_DO_GERENCIAMNETO_DE_RISCO, DefaultPlanejamento_do_Gerenciamneto_de_Risco.class);
    }

    /**
     * Gets all instances of Planejamento_do_Gerenciamneto_de_Risco from the ontology.
     */
    public Collection<? extends Planejamento_do_Gerenciamneto_de_Risco> getAllPlanejamento_do_Gerenciamneto_de_RiscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANEJAMENTO_DO_GERENCIAMNETO_DE_RISCO, DefaultPlanejamento_do_Gerenciamneto_de_Risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_custos_do_projeto
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_custos_do_projeto", Plano_de_gerenciamento_de_custos_do_projeto.class, DefaultPlano_de_gerenciamento_de_custos_do_projeto.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_de_custos_do_projeto.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_de_custos_do_projeto createPlano_de_gerenciamento_de_custos_do_projeto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_CUSTOS_DO_PROJETO, DefaultPlano_de_gerenciamento_de_custos_do_projeto.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_de_custos_do_projeto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_de_custos_do_projeto getPlano_de_gerenciamento_de_custos_do_projeto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_CUSTOS_DO_PROJETO, DefaultPlano_de_gerenciamento_de_custos_do_projeto.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_de_custos_do_projeto from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_de_custos_do_projeto> getAllPlano_de_gerenciamento_de_custos_do_projetoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_CUSTOS_DO_PROJETO, DefaultPlano_de_gerenciamento_de_custos_do_projeto.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco", Plano_de_gerenciamento_de_risco.class, DefaultPlano_de_gerenciamento_de_risco.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_de_risco.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_de_risco createPlano_de_gerenciamento_de_risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO, DefaultPlano_de_gerenciamento_de_risco.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_de_risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_de_risco getPlano_de_gerenciamento_de_risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO, DefaultPlano_de_gerenciamento_de_risco.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_de_risco from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_de_risco> getAllPlano_de_gerenciamento_de_riscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO, DefaultPlano_de_gerenciamento_de_risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco_2", Plano_de_gerenciamento_de_risco_2.class, DefaultPlano_de_gerenciamento_de_risco_2.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_de_risco_2.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_de_risco_2 createPlano_de_gerenciamento_de_risco_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_2, DefaultPlano_de_gerenciamento_de_risco_2.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_de_risco_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_de_risco_2 getPlano_de_gerenciamento_de_risco_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_2, DefaultPlano_de_gerenciamento_de_risco_2.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_de_risco_2 from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_de_risco_2> getAllPlano_de_gerenciamento_de_risco_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_2, DefaultPlano_de_gerenciamento_de_risco_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_risco_4", Plano_de_gerenciamento_de_risco_4.class, DefaultPlano_de_gerenciamento_de_risco_4.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_de_risco_4.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_de_risco_4 createPlano_de_gerenciamento_de_risco_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_4, DefaultPlano_de_gerenciamento_de_risco_4.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_de_risco_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_de_risco_4 getPlano_de_gerenciamento_de_risco_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_4, DefaultPlano_de_gerenciamento_de_risco_4.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_de_risco_4 from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_de_risco_4> getAllPlano_de_gerenciamento_de_risco_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCO_4, DefaultPlano_de_gerenciamento_de_risco_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_de_riscos", Plano_de_gerenciamento_de_riscos.class, DefaultPlano_de_gerenciamento_de_riscos.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_de_riscos.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_de_riscos createPlano_de_gerenciamento_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCOS, DefaultPlano_de_gerenciamento_de_riscos.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_de_riscos getPlano_de_gerenciamento_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCOS, DefaultPlano_de_gerenciamento_de_riscos.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_de_riscos from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_de_riscos> getAllPlano_de_gerenciamento_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DE_RISCOS, DefaultPlano_de_gerenciamento_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_cronograma_do_projeto
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_cronograma_do_projeto", Plano_de_gerenciamento_do_cronograma_do_projeto.class, DefaultPlano_de_gerenciamento_do_cronograma_do_projeto.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_cronograma_do_projeto.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_cronograma_do_projeto createPlano_de_gerenciamento_do_cronograma_do_projeto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_CRONOGRAMA_DO_PROJETO, DefaultPlano_de_gerenciamento_do_cronograma_do_projeto.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_cronograma_do_projeto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_cronograma_do_projeto getPlano_de_gerenciamento_do_cronograma_do_projeto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_CRONOGRAMA_DO_PROJETO, DefaultPlano_de_gerenciamento_do_cronograma_do_projeto.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_cronograma_do_projeto from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_cronograma_do_projeto> getAllPlano_de_gerenciamento_do_cronograma_do_projetoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_CRONOGRAMA_DO_PROJETO, DefaultPlano_de_gerenciamento_do_cronograma_do_projeto.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto", Plano_de_gerenciamento_do_projeto.class, DefaultPlano_de_gerenciamento_do_projeto.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_projeto.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_projeto createPlano_de_gerenciamento_do_projeto(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO, DefaultPlano_de_gerenciamento_do_projeto.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_projeto with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_projeto getPlano_de_gerenciamento_do_projeto(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO, DefaultPlano_de_gerenciamento_do_projeto.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_projeto from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_projeto> getAllPlano_de_gerenciamento_do_projetoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO, DefaultPlano_de_gerenciamento_do_projeto.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_2", Plano_de_gerenciamento_do_projeto_2.class, DefaultPlano_de_gerenciamento_do_projeto_2.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_projeto_2.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_projeto_2 createPlano_de_gerenciamento_do_projeto_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_2, DefaultPlano_de_gerenciamento_do_projeto_2.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_projeto_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_projeto_2 getPlano_de_gerenciamento_do_projeto_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_2, DefaultPlano_de_gerenciamento_do_projeto_2.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_projeto_2 from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_projeto_2> getAllPlano_de_gerenciamento_do_projeto_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_2, DefaultPlano_de_gerenciamento_do_projeto_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_4", Plano_de_gerenciamento_do_projeto_4.class, DefaultPlano_de_gerenciamento_do_projeto_4.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_projeto_4.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_projeto_4 createPlano_de_gerenciamento_do_projeto_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_4, DefaultPlano_de_gerenciamento_do_projeto_4.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_projeto_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_projeto_4 getPlano_de_gerenciamento_do_projeto_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_4, DefaultPlano_de_gerenciamento_do_projeto_4.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_projeto_4 from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_projeto_4> getAllPlano_de_gerenciamento_do_projeto_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_4, DefaultPlano_de_gerenciamento_do_projeto_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_atualizações
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_atualizações", Plano_de_gerenciamento_do_projeto_atualizações.class, DefaultPlano_de_gerenciamento_do_projeto_atualizações.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_projeto_atualizações.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_projeto_atualizações createPlano_de_gerenciamento_do_projeto_atualizações(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES, DefaultPlano_de_gerenciamento_do_projeto_atualizações.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_projeto_atualizações with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_projeto_atualizações getPlano_de_gerenciamento_do_projeto_atualizações(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES, DefaultPlano_de_gerenciamento_do_projeto_atualizações.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_projeto_atualizações from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_projeto_atualizações> getAllPlano_de_gerenciamento_do_projeto_atualizaçõesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES, DefaultPlano_de_gerenciamento_do_projeto_atualizações.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_atualizações_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamento_do_projeto_atualizações_6", Plano_de_gerenciamento_do_projeto_atualizações_6.class, DefaultPlano_de_gerenciamento_do_projeto_atualizações_6.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamento_do_projeto_atualizações_6.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamento_do_projeto_atualizações_6 createPlano_de_gerenciamento_do_projeto_atualizações_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES_6, DefaultPlano_de_gerenciamento_do_projeto_atualizações_6.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamento_do_projeto_atualizações_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamento_do_projeto_atualizações_6 getPlano_de_gerenciamento_do_projeto_atualizações_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES_6, DefaultPlano_de_gerenciamento_do_projeto_atualizações_6.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamento_do_projeto_atualizações_6 from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamento_do_projeto_atualizações_6> getAllPlano_de_gerenciamento_do_projeto_atualizações_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMENTO_DO_PROJETO_ATUALIZAÇÕES_6, DefaultPlano_de_gerenciamento_do_projeto_atualizações_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamneto_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerenciamneto_de_riscos", Plano_de_gerenciamneto_de_riscos.class, DefaultPlano_de_gerenciamneto_de_riscos.class);
    }

    /**
     * Creates an instance of type Plano_de_gerenciamneto_de_riscos.  Modifies the underlying ontology.
     */
    public Plano_de_gerenciamneto_de_riscos createPlano_de_gerenciamneto_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMNETO_DE_RISCOS, DefaultPlano_de_gerenciamneto_de_riscos.class);
    }

    /**
     * Gets an instance of type Plano_de_gerenciamneto_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerenciamneto_de_riscos getPlano_de_gerenciamneto_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIAMNETO_DE_RISCOS, DefaultPlano_de_gerenciamneto_de_riscos.class);
    }

    /**
     * Gets all instances of Plano_de_gerenciamneto_de_riscos from the ontology.
     */
    public Collection<? extends Plano_de_gerenciamneto_de_riscos> getAllPlano_de_gerenciamneto_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIAMNETO_DE_RISCOS, DefaultPlano_de_gerenciamneto_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerencimento_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Plano_de_gerencimento_de_riscos", Plano_de_gerencimento_de_riscos.class, DefaultPlano_de_gerencimento_de_riscos.class);
    }

    /**
     * Creates an instance of type Plano_de_gerencimento_de_riscos.  Modifies the underlying ontology.
     */
    public Plano_de_gerencimento_de_riscos createPlano_de_gerencimento_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIMENTO_DE_RISCOS, DefaultPlano_de_gerencimento_de_riscos.class);
    }

    /**
     * Gets an instance of type Plano_de_gerencimento_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Plano_de_gerencimento_de_riscos getPlano_de_gerencimento_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_PLANO_DE_GERENCIMENTO_DE_RISCOS, DefaultPlano_de_gerencimento_de_riscos.class);
    }

    /**
     * Gets all instances of Plano_de_gerencimento_de_riscos from the ontology.
     */
    public Collection<? extends Plano_de_gerencimento_de_riscos> getAllPlano_de_gerencimento_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_PLANO_DE_GERENCIMENTO_DE_RISCOS, DefaultPlano_de_gerencimento_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Reavaliação_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Reavaliação_de_riscos", Reavaliação_de_riscos.class, DefaultReavaliação_de_riscos.class);
    }

    /**
     * Creates an instance of type Reavaliação_de_riscos.  Modifies the underlying ontology.
     */
    public Reavaliação_de_riscos createReavaliação_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REAVALIAÇÃO_DE_RISCOS, DefaultReavaliação_de_riscos.class);
    }

    /**
     * Gets an instance of type Reavaliação_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Reavaliação_de_riscos getReavaliação_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REAVALIAÇÃO_DE_RISCOS, DefaultReavaliação_de_riscos.class);
    }

    /**
     * Gets all instances of Reavaliação_de_riscos from the ontology.
     */
    public Collection<? extends Reavaliação_de_riscos> getAllReavaliação_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REAVALIAÇÃO_DE_RISCOS, DefaultReavaliação_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_risco
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_risco", Registro_de_risco.class, DefaultRegistro_de_risco.class);
    }

    /**
     * Creates an instance of type Registro_de_risco.  Modifies the underlying ontology.
     */
    public Registro_de_risco createRegistro_de_risco(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCO, DefaultRegistro_de_risco.class);
    }

    /**
     * Gets an instance of type Registro_de_risco with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_risco getRegistro_de_risco(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCO, DefaultRegistro_de_risco.class);
    }

    /**
     * Gets all instances of Registro_de_risco from the ontology.
     */
    public Collection<? extends Registro_de_risco> getAllRegistro_de_riscoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCO, DefaultRegistro_de_risco.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos", Registro_de_riscos.class, DefaultRegistro_de_riscos.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos.  Modifies the underlying ontology.
     */
    public Registro_de_riscos createRegistro_de_riscos(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS, DefaultRegistro_de_riscos.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos getRegistro_de_riscos(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS, DefaultRegistro_de_riscos.class);
    }

    /**
     * Gets all instances of Registro_de_riscos from the ontology.
     */
    public Collection<? extends Registro_de_riscos> getAllRegistro_de_riscosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS, DefaultRegistro_de_riscos.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_3
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_3", Registro_de_riscos_3.class, DefaultRegistro_de_riscos_3.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_3.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_3 createRegistro_de_riscos_3(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_3, DefaultRegistro_de_riscos_3.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_3 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_3 getRegistro_de_riscos_3(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_3, DefaultRegistro_de_riscos_3.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_3 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_3> getAllRegistro_de_riscos_3Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_3, DefaultRegistro_de_riscos_3.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_5
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_5", Registro_de_riscos_5.class, DefaultRegistro_de_riscos_5.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_5.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_5 createRegistro_de_riscos_5(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_5, DefaultRegistro_de_riscos_5.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_5 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_5 getRegistro_de_riscos_5(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_5, DefaultRegistro_de_riscos_5.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_5 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_5> getAllRegistro_de_riscos_5Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_5, DefaultRegistro_de_riscos_5.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_6", Registro_de_riscos_6.class, DefaultRegistro_de_riscos_6.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_6.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_6 createRegistro_de_riscos_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_6, DefaultRegistro_de_riscos_6.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_6 getRegistro_de_riscos_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_6, DefaultRegistro_de_riscos_6.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_6 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_6> getAllRegistro_de_riscos_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_6, DefaultRegistro_de_riscos_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações", Registro_de_riscos_atualizações.class, DefaultRegistro_de_riscos_atualizações.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_atualizações.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_atualizações createRegistro_de_riscos_atualizações(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES, DefaultRegistro_de_riscos_atualizações.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_atualizações with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_atualizações getRegistro_de_riscos_atualizações(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES, DefaultRegistro_de_riscos_atualizações.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_atualizações from the ontology.
     */
    public Collection<? extends Registro_de_riscos_atualizações> getAllRegistro_de_riscos_atualizaçõesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES, DefaultRegistro_de_riscos_atualizações.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_4", Registro_de_riscos_atualizações_4.class, DefaultRegistro_de_riscos_atualizações_4.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_atualizações_4.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_atualizações_4 createRegistro_de_riscos_atualizações_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_4, DefaultRegistro_de_riscos_atualizações_4.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_atualizações_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_atualizações_4 getRegistro_de_riscos_atualizações_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_4, DefaultRegistro_de_riscos_atualizações_4.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_atualizações_4 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_atualizações_4> getAllRegistro_de_riscos_atualizações_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_4, DefaultRegistro_de_riscos_atualizações_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_5
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_5", Registro_de_riscos_atualizações_5.class, DefaultRegistro_de_riscos_atualizações_5.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_atualizações_5.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_atualizações_5 createRegistro_de_riscos_atualizações_5(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_5, DefaultRegistro_de_riscos_atualizações_5.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_atualizações_5 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_atualizações_5 getRegistro_de_riscos_atualizações_5(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_5, DefaultRegistro_de_riscos_atualizações_5.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_atualizações_5 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_atualizações_5> getAllRegistro_de_riscos_atualizações_5Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_5, DefaultRegistro_de_riscos_atualizações_5.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Registro_de_riscos_atualizações_6", Registro_de_riscos_atualizações_6.class, DefaultRegistro_de_riscos_atualizações_6.class);
    }

    /**
     * Creates an instance of type Registro_de_riscos_atualizações_6.  Modifies the underlying ontology.
     */
    public Registro_de_riscos_atualizações_6 createRegistro_de_riscos_atualizações_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_6, DefaultRegistro_de_riscos_atualizações_6.class);
    }

    /**
     * Gets an instance of type Registro_de_riscos_atualizações_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Registro_de_riscos_atualizações_6 getRegistro_de_riscos_atualizações_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_6, DefaultRegistro_de_riscos_atualizações_6.class);
    }

    /**
     * Gets all instances of Registro_de_riscos_atualizações_6 from the ontology.
     */
    public Collection<? extends Registro_de_riscos_atualizações_6> getAllRegistro_de_riscos_atualizações_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REGISTRO_DE_RISCOS_ATUALIZAÇÕES_6, DefaultRegistro_de_riscos_atualizações_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Relatorios_de_desempenho
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Relatorios_de_desempenho", Relatorios_de_desempenho.class, DefaultRelatorios_de_desempenho.class);
    }

    /**
     * Creates an instance of type Relatorios_de_desempenho.  Modifies the underlying ontology.
     */
    public Relatorios_de_desempenho createRelatorios_de_desempenho(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_RELATORIOS_DE_DESEMPENHO, DefaultRelatorios_de_desempenho.class);
    }

    /**
     * Gets an instance of type Relatorios_de_desempenho with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Relatorios_de_desempenho getRelatorios_de_desempenho(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_RELATORIOS_DE_DESEMPENHO, DefaultRelatorios_de_desempenho.class);
    }

    /**
     * Gets all instances of Relatorios_de_desempenho from the ontology.
     */
    public Collection<? extends Relatorios_de_desempenho> getAllRelatorios_de_desempenhoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_RELATORIOS_DE_DESEMPENHO, DefaultRelatorios_de_desempenho.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Reuniões_de_andamento
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Reuniões_de_andamento", Reuniões_de_andamento.class, DefaultReuniões_de_andamento.class);
    }

    /**
     * Creates an instance of type Reuniões_de_andamento.  Modifies the underlying ontology.
     */
    public Reuniões_de_andamento createReuniões_de_andamento(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REUNIÕES_DE_ANDAMENTO, DefaultReuniões_de_andamento.class);
    }

    /**
     * Gets an instance of type Reuniões_de_andamento with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Reuniões_de_andamento getReuniões_de_andamento(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REUNIÕES_DE_ANDAMENTO, DefaultReuniões_de_andamento.class);
    }

    /**
     * Gets all instances of Reuniões_de_andamento from the ontology.
     */
    public Collection<? extends Reuniões_de_andamento> getAllReuniões_de_andamentoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REUNIÕES_DE_ANDAMENTO, DefaultReuniões_de_andamento.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Revisão_da_documentação
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Revisão_da_documentação", Revisão_da_documentação.class, DefaultRevisão_da_documentação.class);
    }

    /**
     * Creates an instance of type Revisão_da_documentação.  Modifies the underlying ontology.
     */
    public Revisão_da_documentação createRevisão_da_documentação(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_REVISÃO_DA_DOCUMENTAÇÃO, DefaultRevisão_da_documentação.class);
    }

    /**
     * Gets an instance of type Revisão_da_documentação with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Revisão_da_documentação getRevisão_da_documentação(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_REVISÃO_DA_DOCUMENTAÇÃO, DefaultRevisão_da_documentação.class);
    }

    /**
     * Gets all instances of Revisão_da_documentação from the ontology.
     */
    public Collection<? extends Revisão_da_documentação> getAllRevisão_da_documentaçãoInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_REVISÃO_DA_DOCUMENTAÇÃO, DefaultRevisão_da_documentação.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas", Saidas.class, DefaultSaidas.class);
    }

    /**
     * Creates an instance of type Saidas.  Modifies the underlying ontology.
     */
    public Saidas createSaidas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS, DefaultSaidas.class);
    }

    /**
     * Gets an instance of type Saidas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas getSaidas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS, DefaultSaidas.class);
    }

    /**
     * Gets all instances of Saidas from the ontology.
     */
    public Collection<? extends Saidas> getAllSaidasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS, DefaultSaidas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_2
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_2", Saidas_2.class, DefaultSaidas_2.class);
    }

    /**
     * Creates an instance of type Saidas_2.  Modifies the underlying ontology.
     */
    public Saidas_2 createSaidas_2(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_2, DefaultSaidas_2.class);
    }

    /**
     * Gets an instance of type Saidas_2 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas_2 getSaidas_2(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_2, DefaultSaidas_2.class);
    }

    /**
     * Gets all instances of Saidas_2 from the ontology.
     */
    public Collection<? extends Saidas_2> getAllSaidas_2Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS_2, DefaultSaidas_2.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_3
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_3", Saidas_3.class, DefaultSaidas_3.class);
    }

    /**
     * Creates an instance of type Saidas_3.  Modifies the underlying ontology.
     */
    public Saidas_3 createSaidas_3(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_3, DefaultSaidas_3.class);
    }

    /**
     * Gets an instance of type Saidas_3 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas_3 getSaidas_3(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_3, DefaultSaidas_3.class);
    }

    /**
     * Gets all instances of Saidas_3 from the ontology.
     */
    public Collection<? extends Saidas_3> getAllSaidas_3Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS_3, DefaultSaidas_3.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_4
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_4", Saidas_4.class, DefaultSaidas_4.class);
    }

    /**
     * Creates an instance of type Saidas_4.  Modifies the underlying ontology.
     */
    public Saidas_4 createSaidas_4(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_4, DefaultSaidas_4.class);
    }

    /**
     * Gets an instance of type Saidas_4 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas_4 getSaidas_4(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_4, DefaultSaidas_4.class);
    }

    /**
     * Gets all instances of Saidas_4 from the ontology.
     */
    public Collection<? extends Saidas_4> getAllSaidas_4Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS_4, DefaultSaidas_4.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_5
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_5", Saidas_5.class, DefaultSaidas_5.class);
    }

    /**
     * Creates an instance of type Saidas_5.  Modifies the underlying ontology.
     */
    public Saidas_5 createSaidas_5(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_5, DefaultSaidas_5.class);
    }

    /**
     * Gets an instance of type Saidas_5 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas_5 getSaidas_5(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_5, DefaultSaidas_5.class);
    }

    /**
     * Gets all instances of Saidas_5 from the ontology.
     */
    public Collection<? extends Saidas_5> getAllSaidas_5Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS_5, DefaultSaidas_5.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_6
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Saidas_6", Saidas_6.class, DefaultSaidas_6.class);
    }

    /**
     * Creates an instance of type Saidas_6.  Modifies the underlying ontology.
     */
    public Saidas_6 createSaidas_6(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_6, DefaultSaidas_6.class);
    }

    /**
     * Gets an instance of type Saidas_6 with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Saidas_6 getSaidas_6(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SAIDAS_6, DefaultSaidas_6.class);
    }

    /**
     * Gets all instances of Saidas_6 from the ontology.
     */
    public Collection<? extends Saidas_6> getAllSaidas_6Instances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SAIDAS_6, DefaultSaidas_6.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Solicitações_de_mudança_aprovadas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Solicitações_de_mudança_aprovadas", Solicitações_de_mudança_aprovadas.class, DefaultSolicitações_de_mudança_aprovadas.class);
    }

    /**
     * Creates an instance of type Solicitações_de_mudança_aprovadas.  Modifies the underlying ontology.
     */
    public Solicitações_de_mudança_aprovadas createSolicitações_de_mudança_aprovadas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_SOLICITAÇÕES_DE_MUDANÇA_APROVADAS, DefaultSolicitações_de_mudança_aprovadas.class);
    }

    /**
     * Gets an instance of type Solicitações_de_mudança_aprovadas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Solicitações_de_mudança_aprovadas getSolicitações_de_mudança_aprovadas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_SOLICITAÇÕES_DE_MUDANÇA_APROVADAS, DefaultSolicitações_de_mudança_aprovadas.class);
    }

    /**
     * Gets all instances of Solicitações_de_mudança_aprovadas from the ontology.
     */
    public Collection<? extends Solicitações_de_mudança_aprovadas> getAllSolicitações_de_mudança_aprovadasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_SOLICITAÇÕES_DE_MUDANÇA_APROVADAS, DefaultSolicitações_de_mudança_aprovadas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Tecnicas_com_diagramas
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Tecnicas_com_diagramas", Tecnicas_com_diagramas.class, DefaultTecnicas_com_diagramas.class);
    }

    /**
     * Creates an instance of type Tecnicas_com_diagramas.  Modifies the underlying ontology.
     */
    public Tecnicas_com_diagramas createTecnicas_com_diagramas(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TECNICAS_COM_DIAGRAMAS, DefaultTecnicas_com_diagramas.class);
    }

    /**
     * Gets an instance of type Tecnicas_com_diagramas with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Tecnicas_com_diagramas getTecnicas_com_diagramas(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TECNICAS_COM_DIAGRAMAS, DefaultTecnicas_com_diagramas.class);
    }

    /**
     * Gets all instances of Tecnicas_com_diagramas from the ontology.
     */
    public Collection<? extends Tecnicas_com_diagramas> getAllTecnicas_com_diagramasInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TECNICAS_COM_DIAGRAMAS, DefaultTecnicas_com_diagramas.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Tecnicas_de_coleta_de_informações
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Tecnicas_de_coleta_de_informações", Tecnicas_de_coleta_de_informações.class, DefaultTecnicas_de_coleta_de_informações.class);
    }

    /**
     * Creates an instance of type Tecnicas_de_coleta_de_informações.  Modifies the underlying ontology.
     */
    public Tecnicas_de_coleta_de_informações createTecnicas_de_coleta_de_informações(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TECNICAS_DE_COLETA_DE_INFORMAÇÕES, DefaultTecnicas_de_coleta_de_informações.class);
    }

    /**
     * Gets an instance of type Tecnicas_de_coleta_de_informações with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Tecnicas_de_coleta_de_informações getTecnicas_de_coleta_de_informações(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TECNICAS_DE_COLETA_DE_INFORMAÇÕES, DefaultTecnicas_de_coleta_de_informações.class);
    }

    /**
     * Gets all instances of Tecnicas_de_coleta_de_informações from the ontology.
     */
    public Collection<? extends Tecnicas_de_coleta_de_informações> getAllTecnicas_de_coleta_de_informaçõesInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TECNICAS_DE_COLETA_DE_INFORMAÇÕES, DefaultTecnicas_de_coleta_de_informações.class);
    }


    /* ***************************************************
     * Class http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Técnicas_de_representações_e_coleta_de_dados
     */

    {
        javaMapping.add("http://www.semanticweb.org/daniel/ontologies/2017/8/untitled-ontology-6#Técnicas_de_representações_e_coleta_de_dados", Técnicas_de_representações_e_coleta_de_dados.class, DefaultTécnicas_de_representações_e_coleta_de_dados.class);
    }

    /**
     * Creates an instance of type Técnicas_de_representações_e_coleta_de_dados.  Modifies the underlying ontology.
     */
    public Técnicas_de_representações_e_coleta_de_dados createTécnicas_de_representações_e_coleta_de_dados(String name) {
		return delegate.createWrappedIndividual(name, Vocabulary.CLASS_TÉCNICAS_DE_REPRESENTAÇÕES_E_COLETA_DE_DADOS, DefaultTécnicas_de_representações_e_coleta_de_dados.class);
    }

    /**
     * Gets an instance of type Técnicas_de_representações_e_coleta_de_dados with the given name.  Does not modify the underlying ontology.
     * @param name the name of the OWL named individual to be retrieved.
     */
    public Técnicas_de_representações_e_coleta_de_dados getTécnicas_de_representações_e_coleta_de_dados(String name) {
		return delegate.getWrappedIndividual(name, Vocabulary.CLASS_TÉCNICAS_DE_REPRESENTAÇÕES_E_COLETA_DE_DADOS, DefaultTécnicas_de_representações_e_coleta_de_dados.class);
    }

    /**
     * Gets all instances of Técnicas_de_representações_e_coleta_de_dados from the ontology.
     */
    public Collection<? extends Técnicas_de_representações_e_coleta_de_dados> getAllTécnicas_de_representações_e_coleta_de_dadosInstances() {
		return delegate.getWrappedIndividuals(Vocabulary.CLASS_TÉCNICAS_DE_REPRESENTAÇÕES_E_COLETA_DE_DADOS, DefaultTécnicas_de_representações_e_coleta_de_dados.class);
    }


}
